package frc.robot.commands;

import java.util.function.DoubleSupplier;

import com.revrobotics.AbsoluteEncoder;
import com.revrobotics.CANSparkMax;

import edu.wpi.first.math.controller.PIDController;
import edu.wpi.first.wpilibj2.command.Command;
import frc.robot.Constants;
import frc.robot.subsystems.Arm;

public class Stay extends Command {
  private final Arm arm;
  private AbsoluteEncoder encoder;
  private CANSparkMax OwnerMotor;
  public Stay(Arm arm) {
    this.arm = arm;
    
    this.encoder = arm.getClawEncoder();
    this.OwnerMotor = arm.getOwnerMotor();
    addRequirements(arm);
  }


  // Called when the command is initially scheduled.
  @Override
  public void initialize() {
    encoder.reset();  
  }

  // Called every time the scheduler runs while the command is scheduled.
  @Override
  public void execute() {
    double ArmPosition = encoder.getDistance();
    double output = Constants.ClawConstants.CURRENT_PID.calculate(ArmPosition);
    OwnerMotor.setCurrent(output);
  }

  // Called once the command ends or is interrupted.
  @Override
  public void end(boolean interrupted) {
    Arm.setCurrent(0);
  }

  // Returns true when the command should end.
  @Override
  public boolean isFinished() {
    return false;
  }
}
